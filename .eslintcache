[{"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\index.js":"1","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\App.js":"2","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\reportWebVitals.js":"3","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\ChatPage.js":"4","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\RegisterPage\\RegisterPage.js":"5","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\LoginPage\\LoginPage.js":"6","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\redux\\reducers\\index.js":"7","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\serviceWorker.js":"8","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\firebase.js":"9","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\redux\\actions\\user_action.js":"10","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\redux\\actions\\types.js":"11","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\redux\\reducers\\user_reducer.js":"12","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\MainPanel\\MainPanel.js":"13","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\SidePanel\\SidePanel.js":"14","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\SidePanel\\UserPanel.js":"15","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\SidePanel\\Favorited.js":"16","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\SidePanel\\DirectMessages.js":"17","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\SidePanel\\ChatRooms.js":"18","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\MainPanel\\Message.js":"19","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\MainPanel\\MessageHeader.js":"20","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\MainPanel\\MessageForm.js":"21","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\redux\\actions\\chatRoom_action.js":"22","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\redux\\reducers\\chatRoom_reducer.js":"23","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\commons\\components\\Skeleton.js":"24","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\TopHeaderPanel\\TopHeaderPanel.js":"25","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\verySidePanel\\verySidePanel.js":"26","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\verySidePanel\\UserPanel.js":"27","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\verySidePanel\\ChatRooms.js":"28","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\verySidePanel\\Favorited.js":"29","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\verySidePanel\\DirectMessages.js":"30","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\VerySidePanel\\VerySidePanel.js":"31","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\VerySidePanel\\Favorited.js":"32","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\VerySidePanel\\UserPanel.js":"33","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\VerySidePanel\\DirectMessages.js":"34","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\VerySidePanel\\ChatRooms.js":"35","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\SidePanel\\FindUser.js":"36","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\MainPanel\\InfoModal.js":"37"},{"size":1228,"mtime":1608278973697,"results":"38","hashOfConfig":"39"},{"size":1435,"mtime":1608284121541,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":1607670824722,"results":"41","hashOfConfig":"39"},{"size":1498,"mtime":1610216711196,"results":"42","hashOfConfig":"39"},{"size":3829,"mtime":1608278419116,"results":"43","hashOfConfig":"39"},{"size":1941,"mtime":1609838462331,"results":"44","hashOfConfig":"39"},{"size":287,"mtime":1608704812538,"results":"45","hashOfConfig":"39"},{"size":5086,"mtime":1608124206201,"results":"46","hashOfConfig":"39"},{"size":723,"mtime":1608272031392,"results":"47","hashOfConfig":"39"},{"size":352,"mtime":1608284181684,"results":"48","hashOfConfig":"39"},{"size":334,"mtime":1608706076310,"results":"49","hashOfConfig":"39"},{"size":799,"mtime":1608720683359,"results":"50","hashOfConfig":"39"},{"size":12087,"mtime":1610223158529,"results":"51","hashOfConfig":"39"},{"size":1707,"mtime":1610226045561,"results":"52","hashOfConfig":"39"},{"size":4093,"mtime":1610224105446,"results":"53","hashOfConfig":"39"},{"size":4744,"mtime":1610223980497,"results":"54","hashOfConfig":"39"},{"size":5160,"mtime":1610223811731,"results":"55","hashOfConfig":"39"},{"size":11021,"mtime":1610065558251,"results":"56","hashOfConfig":"39"},{"size":2007,"mtime":1610046724293,"results":"57","hashOfConfig":"39"},{"size":8643,"mtime":1610234612554,"results":"58","hashOfConfig":"39"},{"size":8591,"mtime":1608817512485,"results":"59","hashOfConfig":"39"},{"size":508,"mtime":1608706065169,"results":"60","hashOfConfig":"39"},{"size":716,"mtime":1608720723162,"results":"61","hashOfConfig":"39"},{"size":306,"mtime":1608719593222,"results":"62","hashOfConfig":"39"},{"size":265,"mtime":1608787298875,"results":"63","hashOfConfig":"39"},{"size":547,"mtime":1608788396673,"results":"64","hashOfConfig":"39"},{"size":3245,"mtime":1608787828457,"results":"65","hashOfConfig":"39"},{"size":11014,"mtime":1608787828287,"results":"66","hashOfConfig":"39"},{"size":3137,"mtime":1608787828387,"results":"67","hashOfConfig":"39"},{"size":3276,"mtime":1608787828345,"results":"68","hashOfConfig":"39"},{"size":489,"mtime":1608791740387,"results":"69","hashOfConfig":"39"},{"size":3137,"mtime":1608787828387,"results":"70","hashOfConfig":"39"},{"size":3245,"mtime":1608787828457,"results":"71","hashOfConfig":"39"},{"size":3276,"mtime":1608787828345,"results":"72","hashOfConfig":"39"},{"size":11346,"mtime":1610235564834,"results":"73","hashOfConfig":"39"},{"size":382,"mtime":1608791861333,"results":"74","hashOfConfig":"39"},{"size":4266,"mtime":1610233404629,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1tifqp2",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":3,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\index.js",[],["159","160"],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\App.js",["161"],"import React, { useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\nimport ChatPage from \"./components/ChatPage/ChatPage\";\nimport LoginPage from \"./components/LoginPage/LoginPage\";\nimport RegisterPage from \"./components/RegisterPage/RegisterPage\";\n\nimport firebase from \"./firebase\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUser, clearUser } from \"./redux/actions/user_action\";\n\nfunction App(props) {\n  let history = useHistory(); //function리액트는 이렇게\n  // withRouter 로 redirect시키는건 클래스형!\n  let dispatch = useDispatch();\n  const isLoading = useSelector((state) => state.user.isLoading);\n  //리덕스에 있는 내용을 가져올때 useSelector 쓴다!\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      console.log(\"user\", user); //계속 유저의 상태를 지켜본다!\n      //로그인이 된 상태\n      if (user) {\n        history.push(\"/\");\n        dispatch(setUser(user));\n      } else {\n        history.push(\"/login\");\n        dispatch(clearUser());\n      }\n    });\n  }, []);\n\n  if (isLoading) {\n    return <div>...loading</div>;\n  } else {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ChatPage} />\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route exact path=\"/register\" component={RegisterPage} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\reportWebVitals.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\ChatPage.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\LoginPage\\LoginPage.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\redux\\reducers\\index.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\serviceWorker.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\firebase.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\redux\\actions\\user_action.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\redux\\actions\\types.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\redux\\reducers\\user_reducer.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\MainPanel\\MainPanel.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\SidePanel\\SidePanel.js",["162"],"import React from \"react\";\r\nimport UserPanel from \"./UserPanel\";\r\nimport Favorited from \"./Favorited\";\r\nimport ChatRooms from \"./ChatRooms\";\r\nimport DirectMessages from \"./DirectMessages\";\r\nimport FindUser from \"./FindUser\";\r\nimport styles from \"./SidePanel.module.css\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\n\r\nfunction SidePanel() {\r\n  const renderThumb = ({ style, ...props }) => {\r\n    const thumbStyle = {\r\n      borderRadius: 6,\r\n      backgroundColor: \"black\",\r\n    };\r\n    return <div style={{ ...style, ...thumbStyle }} {...props} />;\r\n  };\r\n\r\n  const renderThumb_h = ({ style, ...props }) => {\r\n    const thumbStyle = {\r\n      borderRadius: 6,\r\n      backgroundColor: \"black\",\r\n      // overflowX: \"none\",\r\n    };\r\n    return <div style={{ ...style, ...thumbStyle }} {...props} />;\r\n  };\r\n\r\n  const CustomScrollbars = (props) => (\r\n    <Scrollbars\r\n      renderThumbHorizontal={renderThumb_h}\r\n      renderView={(props) => (\r\n        <div {...props} style={{ ...props.style, overflowX: \"hidden\" }} />\r\n      )}\r\n      renderThumbVertical={renderThumb}\r\n      {...props}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className={styles.box}>\r\n      <FindUser />\r\n      <div className={styles.fdBox}>\r\n        <CustomScrollbars\r\n          style={{ width: \"98%\" }}\r\n          autoHide\r\n          autoHideTimeout={500}\r\n          autoHideDuration={200}\r\n        >\r\n          <div className={styles.insideBox}>\r\n            <Favorited />\r\n\r\n            {/* <ChatRooms /> */}\r\n\r\n            <DirectMessages />\r\n          </div>\r\n        </CustomScrollbars>\r\n      </div>\r\n      <div className={styles.userBox}>\r\n        <UserPanel />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidePanel;\r\n","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\SidePanel\\UserPanel.js",["163","164"],"import React, { useRef } from \"react\";\r\nimport { IoIosChatboxes } from \"react-icons/io\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport firebase from \"../../../firebase\";\r\nimport mime from \"mime-types\";\r\nimport { setPhotoURL } from \"../../../redux/actions/user_action\";\r\nimport styles from \"./UserPanel.module.css\";\r\nimport moment from \"moment\";\r\n\r\nfunction UserPanel() {\r\n  const user = useSelector((state) => state.user.currentUser);\r\n  const dispatch = useDispatch();\r\n  const inputOpenImageRef = useRef();\r\n\r\n  const handleLogout = () => {\r\n    firebase.auth().signOut(); //로그아웃하기!\r\n  };\r\n\r\n  const handleOpenImageRef = () => {\r\n    inputOpenImageRef.current.click();\r\n  };\r\n\r\n  const handleUploadImage = async (event) => {\r\n    const file = event.target.files[0];\r\n    var today = new Date();\r\n    const time =\r\n      today.getMonth() +\r\n      today.getDate() +\r\n      today.getHours() +\r\n      today.getMinutes() +\r\n      today.getSeconds();\r\n    const metadata = { contentType: mime.lookup(file.name) };\r\n    // mime을 통해 파일 확장자를 바로 알수있다!\r\n\r\n    try {\r\n      //스토리지에 파일 저장하기\r\n      let uploadTaskSnapshot = await firebase\r\n        .storage()\r\n        .ref()\r\n        .child(`user_image/${time}`) //user_image폴더 안에 넣겠음 storage의\r\n        .put(file, metadata); //데이터를 file에 넣고 metadata 에 확장자를 넣어준다\r\n\r\n      let downloadURL = await uploadTaskSnapshot.ref.getDownloadURL();\r\n      //메소드로 주소 가져옴\r\n\r\n      // 프로필 이미지 수정\r\n      await firebase.auth().currentUser.updateProfile({\r\n        photoURL: downloadURL,\r\n      });\r\n\r\n      dispatch(setPhotoURL(downloadURL));\r\n      //리덕스에 저장된 프로필사진 바꿔주기!\r\n\r\n      //데이터베이스 유저 이미지 수정\r\n      await firebase\r\n        .database()\r\n        .ref(\"users\")\r\n        .child(user.uid) //유저 찾고!!\r\n        .update({ image: downloadURL }); //이미지 수정하기!\r\n\r\n      // console.log('uploadTaskSnapshot', uploadTaskSnapshot)\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  // console.log(\"user\", user);\r\n  const dropstyle = {\r\n    background: \"transparent\",\r\n    border: \"none\",\r\n    marginLeft: \"5px\",\r\n  };\r\n  return (\r\n    user && (\r\n      <div className={styles.UserBox}>\r\n        {/* Logo */}\r\n        {/* <h3 style={{ color: \"white\" }}>\r\n        <IoIosChatboxes /> Chat App\r\n      </h3> */}\r\n\r\n        <div style={{ display: \"flex\", marginBottom: \"1rem\" }}>\r\n          <Image\r\n            src={user && user.photoURL}\r\n            style={{ width: \"30p\", height: \"30px\", marginTop: \"3px\" }}\r\n            roundedCircle\r\n          />\r\n          {/* {user.displayName} */}\r\n          <Dropdown>\r\n            <Dropdown.Toggle\r\n              style={dropstyle}\r\n              variant=\"secondary\"\r\n              // className={styles.dropdown}\r\n              id=\"dropdown-basic\"\r\n            >\r\n              {user && user.displayName}\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu className={styles.menu}>\r\n              <Dropdown.Item\r\n                // style={{\r\n                //   backgroundColor: \"black\",\r\n                // }}\r\n                className={styles.item}\r\n                onClick={handleOpenImageRef}\r\n              >\r\n                Change the profile picture\r\n              </Dropdown.Item>\r\n              <Dropdown.Item className={styles.item} onClick={handleLogout}>\r\n                LogOut\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n\r\n        <input\r\n          onChange={handleUploadImage}\r\n          accept=\"image/jpeg, image/png\"\r\n          style={{ display: \"none\" }}\r\n          ref={inputOpenImageRef}\r\n          type=\"file\"\r\n        />\r\n        {/* 숨겨져있다.. ref통해서 클릭시킬것임! \r\n      accept 통해서 파일 속성 정할수있음!*/}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default UserPanel;\r\n","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\SidePanel\\Favorited.js",["165","166","167"],"import React, { Component } from \"react\";\r\nimport { FaRegSmileBeam } from \"react-icons/fa\";\r\nimport firebase from \"../../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentChatRoom,\r\n  setPrivateChatRoom,\r\n} from \"../../../redux/actions/chatRoom_action\";\r\nimport styles from \"./Favorited.module.css\";\r\n\r\nexport class Favorited extends Component {\r\n  state = {\r\n    favoritedChatRooms: [],\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    activeChatRoomId: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      this.addListeners(this.props.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.user) {\r\n      this.removeListener(this.props.user.uid);\r\n    }\r\n  }\r\n\r\n  removeListener = (userId) => {\r\n    this.state.usersRef.child(`${userId}/favorited`).off();\r\n  };\r\n\r\n  addListeners = (userId) => {\r\n    const { usersRef } = this.state;\r\n\r\n    usersRef\r\n      .child(userId)\r\n      .child(\"favorited\")\r\n      .on(\"child_added\", (DataSnapshot) => {\r\n        //데이터가 추가될때 반응한다!!\r\n        const favoritedChatRoom = {\r\n          id: DataSnapshot.key,\r\n          ...DataSnapshot.val(),\r\n        };\r\n        this.setState({\r\n          favoritedChatRooms: [\r\n            ...this.state.favoritedChatRooms,\r\n            favoritedChatRoom,\r\n          ],\r\n        });\r\n      });\r\n\r\n    usersRef\r\n      .child(userId)\r\n      .child(\"favorited\")\r\n      .on(\"child_removed\", (DataSnapshot) => {\r\n        const chatRoomToRemove = {\r\n          id: DataSnapshot.key,\r\n          ...DataSnapshot.val(),\r\n        };\r\n        const filteredChatRooms = this.state.favoritedChatRooms.filter(\r\n          (chatRoom) => {\r\n            return chatRoom.id !== chatRoomToRemove.id;\r\n          } //chatRoom.id !== chatRoomToRemove.id;같지 않는걸 리턴한다!!\r\n          // 즉 removed될 방 뺴고 다 리턴될것임!\r\n        );\r\n        this.setState({ favoritedChatRooms: filteredChatRooms });\r\n      });\r\n  };\r\n\r\n  changeChatRoom = (room) => {\r\n    this.props.dispatch(setCurrentChatRoom(room));\r\n    this.props.dispatch(setPrivateChatRoom(false));\r\n    this.setState({ activeChatRoomId: room.id });\r\n  };\r\n\r\n  renderFavoritedChatRooms = (favoritedChatRooms, currentChat) =>\r\n    favoritedChatRooms.length > 0 &&\r\n    favoritedChatRooms.map((chatRoom) => (\r\n      <li\r\n        className={styles.li}\r\n        key={chatRoom.id}\r\n        onClick={() => this.changeChatRoom(chatRoom)}\r\n        style={{\r\n          backgroundColor: chatRoom.id === currentChat && \" #40444c\",\r\n          color: chatRoom.id === currentChat && \" white\",\r\n          marginBottom: \"4px\",\r\n          paddingLeft: \"5px\",\r\n          height: \"46px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <img className={styles.avatar} src={chatRoom.createdBy.image} />\r\n        <span className={styles.name}> {chatRoom.name}</span>\r\n      </li>\r\n    ));\r\n\r\n  renderFavoritedChatRoomsJust = (favoritedChatRooms) =>\r\n    favoritedChatRooms.length > 0 &&\r\n    favoritedChatRooms.map((chatRoom) => (\r\n      <li\r\n        className={styles.li}\r\n        key={chatRoom.id}\r\n        onClick={() => this.changeChatRoom(chatRoom)}\r\n        style={{\r\n          // backgroundColor:\r\n          //   chatRoom.id === this.state.activeChatRoomId && \" #40444c\",\r\n          // color: chatRoom.id === this.state.activeChatRoomId && \" white\",\r\n          marginBottom: \"4px\",\r\n          paddingLeft: \"5px\",\r\n          height: \"46px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <img className={styles.avatar} src={chatRoom.createdBy.image} />\r\n        <span className={styles.name}> {chatRoom.name}</span>\r\n      </li>\r\n    ));\r\n\r\n  render() {\r\n    const { favoritedChatRooms } = this.state;\r\n    // console.log(\"favoritedChatRooms\", favoritedChatRooms);\r\n    return (\r\n      <div>\r\n        <span className={styles.titlebox}>\r\n          FAVORITED({favoritedChatRooms.length})\r\n        </span>\r\n        <ul className={styles.ul}>\r\n          {/* {this.renderFavoritedChatRooms(favoritedChatRooms)} */}\r\n          {this.props.currentChat !== null\r\n            ? this.renderFavoritedChatRooms(\r\n                favoritedChatRooms,\r\n                this.props.currentChat\r\n              )\r\n            : this.renderFavoritedChatRoomsJust(favoritedChatRooms)}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  if (state.chatRoom.currentChatRoom !== null) {\r\n    return {\r\n      user: state.user.currentUser,\r\n      currentChat: state.chatRoom.currentChatRoom.id,\r\n    };\r\n  } else {\r\n    return {\r\n      user: state.user.currentUser,\r\n    };\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Favorited);\r\n","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\SidePanel\\DirectMessages.js",["168","169","170"],"import React, { Component } from \"react\";\r\nimport { FaRegSmile } from \"react-icons/fa\";\r\nimport firebase from \"../../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentChatRoom,\r\n  setPrivateChatRoom,\r\n} from \"../../../redux/actions/chatRoom_action\";\r\nimport styles from \"./DirectMessages.module.css\";\r\n\r\nexport class DirectMessages extends Component {\r\n  state = {\r\n    usersRef: firebase.database().ref(\"users\"), //데이터베이스 user테이블에 접근!\r\n    users: [],\r\n    activeChatRoom: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      this.addUsersListeners(this.props.user.uid); //리덕스user는 여기서 사용!\r\n    } //바로 변수로 넣어줌!\r\n  }\r\n\r\n  //여기로 인해 favorite 갯수 자꾸 바뀌는거 고쳤음!!\r\n  componentWillUnmount() {\r\n    if (this.props.user) {\r\n      this.removeListener();\r\n    }\r\n  }\r\n\r\n  removeListener = () => {\r\n    this.state.usersRef.off();\r\n  };\r\n\r\n  addUsersListeners = (currentUserId) => {\r\n    //유저가 추가될때마다 반응함!\r\n    const { usersRef } = this.state;\r\n    let usersArray = [];\r\n    usersRef.on(\"child_added\", (DataSnapshot) => {\r\n      if (currentUserId !== DataSnapshot.key) {\r\n        //내이름은 DM에 뿌리면 안된다!\r\n        //DataSnapshot.key는 추가된 상대 UID이다!\r\n        let user = DataSnapshot.val();\r\n        user[\"uid\"] = DataSnapshot.key;\r\n        user[\"status\"] = \"offline\"; //접속 했는지 안했는지\r\n        usersArray.push(user);\r\n        this.setState({ users: usersArray });\r\n      }\r\n    }); //결국 user라는 변수에.. DB에있는 user내용 + UID + status를 추가해준다!\r\n  };\r\n\r\n  getChatRoomId = (userId) => {\r\n    const currentUserId = this.props.user.uid;\r\n\r\n    //상대방과 나의 ID를 합쳐 DMROOMID를 만들건데.. 순서가\r\n    //똑같아야하기때문에...\r\n    //ex A:1234    B:1234\r\n    // DmroomID = A:1234/B:1234 가 되어야한다!! 바뀌면 안됨!\r\n    return userId > currentUserId\r\n      ? `${userId}/${currentUserId}`\r\n      : `${currentUserId}/${userId}`;\r\n  };\r\n\r\n  changeChatRoom = (user) => {\r\n    console.log(\"user\", user);\r\n    const chatRoomId = this.getChatRoomId(user.uid);\r\n    const chatRoomData = {\r\n      id: chatRoomId,\r\n      name: user.name,\r\n      image: user.image,\r\n    };\r\n\r\n    this.props.dispatch(setCurrentChatRoom(chatRoomData));\r\n    this.props.dispatch(setPrivateChatRoom(true));\r\n    this.setActiveChatRoom(user.uid);\r\n    //리덕스를 이용해 현재 방이 무엇인지 알려줄것임!\r\n    //DM은 private 룸인걸 알려줌!\r\n  };\r\n\r\n  setActiveChatRoom = (userId) => {\r\n    this.setState({ activeChatRoom: userId });\r\n  };\r\n\r\n  renderDirectMessages = (users, currentChat) =>\r\n    users.length > 0 &&\r\n    users.map((user) => (\r\n      <li\r\n        className={styles.li}\r\n        key={user.uid}\r\n        style={{\r\n          backgroundColor: user.name === currentChat && \"#40444c\",\r\n          color: user.name === currentChat && \" white\",\r\n          marginBottom: \"4px\",\r\n          paddingLeft: \"5px\",\r\n          height: \"46px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }} //내가 클릭한 방과 uid가 같으면 색주기!\r\n        onClick={() => this.changeChatRoom(user)}\r\n      >\r\n        <img className={styles.avatar} src={user.image} />\r\n        <span className={styles.name}>{user.name}</span>\r\n      </li>\r\n    ));\r\n\r\n  renderDirectMessagesJust = (users) =>\r\n    users.length > 0 &&\r\n    users.map((user) => (\r\n      <li\r\n        className={styles.li}\r\n        key={user.uid}\r\n        style={{\r\n          marginBottom: \"4px\",\r\n          paddingLeft: \"5px\",\r\n          height: \"46px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        }} //내가 클릭한 방과 uid가 같으면 색주기!\r\n        onClick={() => this.changeChatRoom(user)}\r\n      >\r\n        <img className={styles.avatar} src={user.image} />\r\n        <span className={styles.name}>{user.name}</span>\r\n      </li>\r\n    ));\r\n\r\n  render() {\r\n    // console.log(\"currentChat\", currentChat);\r\n    // console.log(\"users\", users);\r\n    const { users } = this.state;\r\n    if (this.props.currentChat) {\r\n      console.log(\"currentChat\", this.props.currentChat);\r\n      console.log(\"users있다\", users);\r\n    } else {\r\n      console.log(\"users\", users);\r\n    }\r\n    return (\r\n      <div>\r\n        <div className={styles.titlebox}>DIRECT MESSAGES</div>\r\n\r\n        <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n          {this.props.currentChat !== null\r\n            ? this.renderDirectMessages(users, this.props.currentChat)\r\n            : this.renderDirectMessagesJust(users)}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(\"state.chatRoom.currentChatRoom\", state.chatRoom.currentChatRoom);\r\n  if (state.chatRoom.currentChatRoom !== null) {\r\n    return {\r\n      user: state.user.currentUser,\r\n      currentChat: state.chatRoom.currentChatRoom.name,\r\n    };\r\n  } else {\r\n    return {\r\n      user: state.user.currentUser,\r\n    };\r\n  }\r\n}; //리덕스 연결!!\r\n\r\nexport default connect(mapStateToProps)(DirectMessages);\r\n","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\SidePanel\\ChatRooms.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\MainPanel\\Message.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\MainPanel\\MessageHeader.js",["171","172","173","174"],"import React, { useState, useEffect } from \"react\";\r\n// import Container from \"react-bootstrap/Container\";\r\n// import Row from \"react-bootstrap/Row\";\r\n// import Col from \"react-bootstrap/Col\";\r\n// import InputGroup from \"react-bootstrap/InputGroup\";\r\n// import FormControl from \"react-bootstrap/FormControl\";\r\n// import Image from \"react-bootstrap/Image\";\r\n// import Accordion from \"react-bootstrap/Accordion\";\r\n// import Card from \"react-bootstrap/Card\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import { FaLock } from \"react-icons/fa\";\r\n// import { FaLockOpen } from \"react-icons/fa\";\r\n// import { MdFavorite, MdFavoriteBorder } from \"react-icons/md\";\r\n// import { AiOutlineSearch } from \"react-icons/ai\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useSelector } from \"react-redux\";\r\nimport firebase from \"../../../firebase\";\r\nimport { Media } from \"react-bootstrap\";\r\nimport {\r\n  InfoCircleFill,\r\n  BookmarkHeartFill,\r\n  BookmarkHeart,\r\n  EmojiHeartEyesFill,\r\n  HeartFill,\r\n  Heart,\r\n  PeopleFill,\r\n  PersonFill,\r\n} from \"react-bootstrap-icons\";\r\nimport styles from \"./MessageHeader.module.css\";\r\n// import InfoModal from \"./InfoModal\";\r\n\r\nfunction MessageHeader({ handleSearchChange }) {\r\n  const chatRoom = useSelector((state) => state.chatRoom.currentChatRoom);\r\n  const isPrivateChatRoom = useSelector(\r\n    (state) => state.chatRoom.isPrivateChatRoom\r\n  );\r\n  const [isFavorited, setIsFavorited] = useState(false);\r\n  const usersRef = firebase.database().ref(\"users\");\r\n  const user = useSelector((state) => state.user.currentUser);\r\n  const userPosts = useSelector((state) => state.chatRoom.userPosts);\r\n  const [show, setShow] = useState(false);\r\n\r\n  //데이터 베이스 한번가져옴.. 나머지 는 데베에서 결과 바껴도.. 저장되고..\r\n  // 다시 킬때 최종결과 데베에서 다시 가져옴!\r\n  useEffect(() => {\r\n    if (chatRoom && user) {\r\n      addFavoriteListener(chatRoom.id, user.uid);\r\n    }\r\n  }, []);\r\n\r\n  const addFavoriteListener = (chatRoomId, userId) => {\r\n    //여기서는 좋아요가 눌어져있는지 아닌지 체크 해서.. null이 아닌경우\r\n    //즉 체크 되어있을때 setIsFavorited 에 참or거짓을 넣어준다\r\n    usersRef\r\n      .child(userId)\r\n      .child(\"favorited\")\r\n      .once(\"value\")\r\n      .then((data) => {\r\n        // console.log(\"data초기\", data.val());\r\n        if (data.val() !== null) {\r\n          const chatRoomIds = Object.keys(data.val());\r\n          //이렇게 하면 좋아요 누른 방의 id가 chatRoomIds에 들어간다\r\n\r\n          // console.log(\"data.val()\", data.val());\r\n          // console.log(\"chatRoomIds\", chatRoomIds);\r\n          const isAlreadyFavorited = chatRoomIds.includes(chatRoomId);\r\n          //여기서 포함됬는지 안했는지 알아본다!\r\n          console.log(\"isAlreadyFavorited\", isAlreadyFavorited);\r\n          setIsFavorited(isAlreadyFavorited);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleFavorite = () => {\r\n    if (isFavorited) {\r\n      usersRef\r\n        .child(`${user.uid}/favorited`)\r\n        .child(chatRoom.id)\r\n        .remove((err) => {\r\n          if (err !== null) {\r\n            console.error(err);\r\n          }\r\n        });\r\n      setIsFavorited((prev) => !prev);\r\n    } else {\r\n      usersRef.child(`${user.uid}/favorited`).update({\r\n        [chatRoom.id]: {\r\n          name: chatRoom.name,\r\n          description: chatRoom.description,\r\n          createdBy: {\r\n            name: chatRoom.createdBy.name,\r\n            image: chatRoom.createdBy.image,\r\n          },\r\n        },\r\n      });\r\n      setIsFavorited((prev) => !prev);\r\n      //setIsFavorited 의 isFavorited 의 요소를 반대로 바꿔주기!\r\n    }\r\n  };\r\n\r\n  const handleInfo = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  //post count 뿌려줘야한다!\r\n  //userPosts 리덕스를통해 가져옴! mainpanel에서 준정보!\r\n  const renderUserPosts = (userPosts) =>\r\n    //sort 쓰기위해선 키값 , value 하나 인배열로 바꿔줘야한다!\r\n    //userPosts는 객체이므로..   Object.entries(userPosts)를 통해\r\n    // [[0:\"username1\", 1:[count:2, image:\"~~\"],[0:\"username1\", 1:[count:2, image:\"~~\"]]\r\n    // 되어서 나온다.. 그래서 각 배열속의 배열의 1인덱스의 count가 필요!\r\n    Object.entries(userPosts)\r\n      .sort((a, b) => b[1].count - a[1].count)\r\n      //여기까지 카운트가 큰순으로 정렬된다.. a-b는 작은순에서큰순!!\r\n      .map(([key, val], i) => (\r\n        <Media key={i}>\r\n          <img\r\n            style={{ borderRadius: 25 }}\r\n            width={48}\r\n            height={48}\r\n            className=\"mr-3\"\r\n            src={val.image}\r\n            alt={val.name}\r\n          />\r\n          <Media.Body>\r\n            <h6 className={styles.name}>{key}</h6>\r\n            <p className={styles.number}>{val.count} message(s)</p>\r\n          </Media.Body>\r\n        </Media>\r\n      ));\r\n\r\n  return (\r\n    <div className={styles.bigBox}>\r\n      {/* 모든건 부트스트랩 활용하여 UI만들었음! */}\r\n\r\n      <div className={styles.chatName}>\r\n        {isPrivateChatRoom ? (\r\n          <PersonFill style={{ marginBottom: \"5px\" }} size={25} />\r\n        ) : (\r\n          // 열쇠 아이콘!!\r\n          <PeopleFill style={{ marginBottom: \"5px\" }} size={25} />\r\n        )}\r\n\r\n        <span className={styles.roomName}>{chatRoom && chatRoom.name}</span>\r\n      </div>\r\n\r\n      <div className={styles.des}></div>\r\n      <div className={styles.count}></div>\r\n      <div className={styles.input}>\r\n        {/* <InputGroup className=\"mb-3\">\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text id=\"basic-addon1\">\r\n              <AiOutlineSearch />\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend> */}\r\n\r\n        <form>\r\n          <input\r\n            className={styles.input}\r\n            onChange={handleSearchChange}\r\n            placeholder=\"Search Messages..\"\r\n          />\r\n        </form>\r\n        {/* </InputGroup> */}\r\n      </div>\r\n      <div className={styles.icon}>\r\n        <span\r\n          style={{\r\n            cursor: \"pointer\",\r\n            marginLeft: \"8px\",\r\n          }}\r\n          onClick={handleInfo}\r\n        >\r\n          <InfoCircleFill size={20} />\r\n        </span>\r\n        {!isPrivateChatRoom && (\r\n          <span\r\n            style={{\r\n              cursor: \"pointer\",\r\n              marginLeft: \"8px\",\r\n            }}\r\n            onClick={handleFavorite}\r\n          >\r\n            {isFavorited ? <HeartFill size={17} /> : <Heart size={17} />}\r\n          </span>\r\n        )}\r\n      </div>\r\n      {/* {!isPrivateChatRoom && (\r\n        <div>\r\n          <p>\r\n            <Image\r\n              src={chatRoom && chatRoom.createdBy.image}\r\n              roundedCircle\r\n              style={{ width: \"30px\", height: \"30px\" }}\r\n            />\r\n            {chatRoom && chatRoom.createdBy.name}\r\n          </p>\r\n        </div>\r\n      )} */}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header\r\n          closeButton\r\n          style={{ backgroundColor: \"#363a3f\", color: \"white\" }}\r\n        >\r\n          <Modal.Title>Infomation Of This Room</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ backgroundColor: \"#363a3f\" }}>\r\n          <div className={styles.upBox}>\r\n            <span className={styles.discription}>Discription</span>\r\n            <div className={styles.discriptionInside}>\r\n              {chatRoom && chatRoom.description}\r\n            </div>\r\n          </div>\r\n          <div className={styles.downBox}>\r\n            {userPosts && renderUserPosts(userPosts)}\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageHeader;\r\n\r\n// <Container>\r\n// <Accordion>\r\n//   <Card>\r\n//     <Card.Header>\r\n//       {/* <Card.Header style={{ height: \"25px\", padding: \"0 1rem\" }}> */}\r\n//       <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n//         Description\r\n//       </Accordion.Toggle>\r\n//     </Card.Header>\r\n//     <Accordion.Collapse eventKey=\"0\">\r\n//       <Card.Body>{chatRoom && chatRoom.description}</Card.Body>\r\n//     </Accordion.Collapse>\r\n//   </Card>\r\n// </Accordion>\r\n// </div>\r\n// <div>\r\n// <Accordion>\r\n//   <Card>\r\n//     <Card.Header style={{ padding: \"0 1rem\" }}>\r\n//       <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n//         Posts Count\r\n//       </Accordion.Toggle>\r\n//     </Card.Header>\r\n//     <Accordion.Collapse eventKey=\"0\">\r\n//       <Card.Body>{userPosts && renderUserPosts(userPosts)}</Card.Body>\r\n//     </Accordion.Collapse>\r\n//   </Card>\r\n// </Accordion>\r\n// </Container>\r\n","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\MainPanel\\MessageForm.js",["175","176","177"],"import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport firebase from \"../../../firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport mime from \"mime-types\";\r\nimport styles from \"./MessageForm.module.css\";\r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport { FiSend } from \"react-icons/fi\";\r\nfunction MessageForm() {\r\n  const chatRoom = useSelector((state) => state.chatRoom.currentChatRoom);\r\n  const user = useSelector((state) => state.user.currentUser);\r\n  //리덕스를 이용하여 chat룸의 id를 가져온다!\r\n  const [content, setContent] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  //다시 send 못누르게 하기위해!\r\n  const [percentage, setPercentage] = useState(0);\r\n  const inputOpenImageRef = useRef();\r\n\r\n  const messagesRef = firebase.database().ref(\"messages\");\r\n  //ref는 database중 종류가 messages라는 뜻임\r\n\r\n  const storageRef = firebase.storage().ref();\r\n  //파베 스토리지 접근!\r\n  const typingRef = firebase.database().ref(\"typing\");\r\n  const isPrivateChatRoom = useSelector(\r\n    (state) => state.chatRoom.isPrivateChatRoom\r\n  );\r\n  const handleChange = (event) => {\r\n    setContent(event.target.value);\r\n  };\r\n\r\n  const createMessage = (fileUrl = null) => {\r\n    //createMssage() 안에 인자없으면 null임!\r\n    const message = {\r\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n      user: {\r\n        id: user.uid,\r\n        name: user.displayName,\r\n        image: user.photoURL,\r\n      },\r\n    };\r\n\r\n    if (fileUrl !== null) {\r\n      message[\"image\"] = fileUrl;\r\n    } else {\r\n      message[\"content\"] = content;\r\n    }\r\n    return message;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!content) {\r\n      setErrors((prev) => prev.concat(\"Type contents first\"));\r\n      //prev는 월래 있던 애러에다가 concat으로 단어 붙어줌!\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    //firebase에 메시지를 저장하는 부분\r\n    try {\r\n      await messagesRef.child(chatRoom.id).push().set(createMessage());\r\n      //체팅방 id를 넣고!\r\n      //매세지 보내줬으면.. 다시 refresh해줘야함!!\r\n\r\n      typingRef.child(chatRoom.id).child(user.uid).remove();\r\n\r\n      setLoading(false);\r\n      setContent(\"\");\r\n      setErrors([]);\r\n    } catch (error) {\r\n      setErrors((pre) => pre.concat(error.message));\r\n      setLoading(false);\r\n      setTimeout(() => {\r\n        setErrors([]);\r\n      }, 5000); //5초 정도후에 setError 없에줌!\r\n    }\r\n  };\r\n\r\n  const handleOpenImageRef = () => {\r\n    inputOpenImageRef.current.click();\r\n  };\r\n\r\n  const getPath = () => {\r\n    if (isPrivateChatRoom) {\r\n      return `/message/private/${chatRoom.id}`;\r\n      //private은 다른경로 로 넣어준다!\r\n    } else {\r\n      return `/message/public`;\r\n    }\r\n  };\r\n\r\n  const handleUploadImage = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    const filePath = `${getPath()}/${file.name}`;\r\n    const metadata = { contentType: mime.lookup(file.name) };\r\n    // 밈을 쓰면 확장자를 바로 찾아줌!\r\n    setLoading(true);\r\n    try {\r\n      //파일을 먼저 스토리지에 저장\r\n      let uploadTask = storageRef.child(filePath).put(file, metadata);\r\n      //await 빼야함.. 왜냐하면..await은 파일이 전송끝나면 변수에 내용을담는데\r\n      // uploadTask는 상시 변하는걸 체크 당할거기 떄문!\r\n      //파일 저장되는 퍼센티지 구하기\r\n      uploadTask.on(\r\n        //------------첫번쨰 인자는 무엇이 변할때 listen할것인지!!\r\n        \"state_changed\", //상태가 변할때마다 리스너가 작용한다!\r\n\r\n        //----------- 두번째 인자는 파일전송상황\r\n        (UploadTaskSnapshot) => {\r\n          const percentage = Math.round(\r\n            (UploadTaskSnapshot.bytesTransferred /\r\n              UploadTaskSnapshot.totalBytes) *\r\n              100\r\n          ); //bytesTransferred 얼마나 전송됐는지 알려줌!\r\n          setPercentage(percentage);\r\n        },\r\n        //-------------세번째 인자는 파일전송시 에러 발생!\r\n        (err) => {\r\n          console.error(err);\r\n          setLoading(false);\r\n        },\r\n        //--------------네번째 인자는 파일전송 다된걸 어떻게 할것인지!\r\n        () => {\r\n          //저장이 다 된 후에 파일 메시지 전송 (데이터베이스에 저장) 해야\r\n          //그래야 다른사람도 방안의 사진을 볼수있다!\r\n\r\n          //저장된 파일을 다운로드 받을 수 있는 URL 가져오기\r\n          uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n            //getDownloadURL() 의 결과를 downloadURL에 담는다!\r\n\r\n            messagesRef //데이터베이스 message테이블 접근!!\r\n              .child(chatRoom.id) //어떤방인지 넣어주고!\r\n              .push() // 정보를 넣는거니깐 push\r\n              .set(createMessage(downloadURL));\r\n            setLoading(false);\r\n          });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  //리덕스에 갈필요없다.. db까지만 정보 수정 한후 listener통해 정보 보여주면됨!\r\n  const handleKeyDown = (event) => {\r\n    if (event.ctrlKey && event.keyCode === 13) {\r\n      handleSubmit();\r\n    } //컨트롤 + 엔터는 메세지를 보낼수있다!\r\n    if (content) {\r\n      typingRef.child(chatRoom.id).child(user.uid).set(user.displayName);\r\n    } else {\r\n      typingRef.child(chatRoom.id).child(user.uid).remove();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.bigBox}>\r\n      {!(percentage === 0 || percentage === 100) && (\r\n        <ProgressBar\r\n          variant=\"warning\"\r\n          label={`${percentage}%`}\r\n          now={percentage}\r\n        />\r\n      )}\r\n\r\n      <div>\r\n        {errors.map((errorMsg) => (\r\n          <p style={{ color: \"red\" }} key={errorMsg}>\r\n            {errorMsg}\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className={styles.inputBox}>\r\n        <div className={styles.inputLeft}>\r\n          <FaPlusCircle\r\n            onClick={handleOpenImageRef}\r\n            style={{ color: \"white\" }}\r\n            disabled={loading ? true : false}\r\n          />\r\n        </div>\r\n        <form className={styles.formBox} onSubmit={handleSubmit}>\r\n          <input\r\n            className={styles.input}\r\n            onKeyDown={handleKeyDown}\r\n            //  키를 누를때!\r\n            value={content}\r\n            onChange={handleChange}\r\n            placeholder=\"Message\"\r\n          />\r\n        </form>\r\n        <div className={styles.inputRight}>\r\n          <FiSend\r\n            onClick={handleSubmit}\r\n            style={{ color: \"white\" }}\r\n            disabled={loading ? true : false}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Control\r\n            onKeyDown={handleKeyDown}\r\n            //  키를 누를때!\r\n            value={content}\r\n            onChange={handleChange}\r\n            as=\"textarea\"\r\n            rows={2}\r\n          />\r\n        </Form.Group>\r\n      </Form> */}\r\n\r\n      {/* {console.log(\"percentage\", percentage)} */}\r\n\r\n      {/* <Row>\r\n        <Col>\r\n          <button\r\n            onClick={handleSubmit}\r\n            className=\"message-form-button\"\r\n            style={{ width: \"100%\" }}\r\n            disabled={loading ? true : false}\r\n          >\r\n            SEND\r\n          </button>\r\n        </Col>\r\n        <Col>\r\n          <button\r\n            onClick={handleOpenImageRef}\r\n            // 이걸로 인풋 파일 업로드 대신 실행한다!\r\n            className=\"message-form-button\"\r\n            style={{ width: \"100%\" }}\r\n            disabled={loading ? true : false}\r\n          >\r\n            UPLOAD\r\n          </button>\r\n        </Col>\r\n      </Row> */}\r\n\r\n      <input\r\n        accept=\"image/jpeg, image/png\"\r\n        // accept를 통해 어떤 파일형식만 지원할지 정할수있다!\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        ref={inputOpenImageRef}\r\n        onChange={handleUploadImage}\r\n      />\r\n      {/* 업로드 버튼눌러서 실행하게끔 해준다! input버튼이아닌!\r\n      그러기 위해선 ref를 사용해야한다! */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageForm;\r\n","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\redux\\actions\\chatRoom_action.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\redux\\reducers\\chatRoom_reducer.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\commons\\components\\Skeleton.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\TopHeaderPanel\\TopHeaderPanel.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\verySidePanel\\verySidePanel.js",["178","179","180","181"],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\verySidePanel\\UserPanel.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\verySidePanel\\ChatRooms.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\verySidePanel\\Favorited.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\verySidePanel\\DirectMessages.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\VerySidePanel\\VerySidePanel.js",["182","183","184"],"import React from \"react\";\r\nimport UserPanel from \"./UserPanel\";\r\nimport Favorited from \"./Favorited\";\r\nimport ChatRooms from \"./ChatRooms\";\r\nimport DirectMessages from \"./DirectMessages\";\r\nimport styles from \"./VerySidePanel.module.css\";\r\n\r\nfunction VerySidePanel() {\r\n  return (\r\n    <div className={styles.box}>\r\n      {/* <UserPanel /> */}\r\n\r\n      {/* <Favorited /> */}\r\n\r\n      <ChatRooms />\r\n\r\n      {/* <DirectMessages /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VerySidePanel;\r\n","C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\VerySidePanel\\Favorited.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\VerySidePanel\\UserPanel.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\VerySidePanel\\DirectMessages.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\VerySidePanel\\ChatRooms.js",["185","186"],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\SidePanel\\FindUser.js",[],"C:\\Users\\818396\\Desktop\\my_project\\JohnAhn\\chatting\\src\\components\\ChatPage\\MainPanel\\InfoModal.js",["187","188","189","190","191","192"],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":32,"column":6,"nodeType":"199","endLine":32,"endColumn":8,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":17},{"ruleId":"201","severity":1,"message":"205","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":24},{"ruleId":"201","severity":1,"message":"206","line":10,"column":8,"nodeType":"203","messageId":"204","endLine":10,"endColumn":14},{"ruleId":"201","severity":1,"message":"207","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":24},{"ruleId":"208","severity":1,"message":"209","line":95,"column":9,"nodeType":"210","endLine":95,"endColumn":73},{"ruleId":"208","severity":1,"message":"209","line":118,"column":9,"nodeType":"210","endLine":118,"endColumn":73},{"ruleId":"201","severity":1,"message":"211","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":101,"column":9,"nodeType":"210","endLine":101,"endColumn":59},{"ruleId":"208","severity":1,"message":"209","line":121,"column":9,"nodeType":"210","endLine":121,"endColumn":59},{"ruleId":"201","severity":1,"message":"212","line":21,"column":3,"nodeType":"203","messageId":"204","endLine":21,"endColumn":20},{"ruleId":"201","severity":1,"message":"213","line":22,"column":3,"nodeType":"203","messageId":"204","endLine":22,"endColumn":16},{"ruleId":"201","severity":1,"message":"214","line":23,"column":3,"nodeType":"203","messageId":"204","endLine":23,"endColumn":21},{"ruleId":"197","severity":1,"message":"215","line":49,"column":6,"nodeType":"199","endLine":49,"endColumn":8,"suggestions":"216"},{"ruleId":"201","severity":1,"message":"217","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":12},{"ruleId":"201","severity":1,"message":"218","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":11},{"ruleId":"201","severity":1,"message":"219","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":11},{"ruleId":"201","severity":1,"message":"220","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":17},{"ruleId":"201","severity":1,"message":"221","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":17},{"ruleId":"201","severity":1,"message":"222","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":22},{"ruleId":"201","severity":1,"message":"220","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":17},{"ruleId":"201","severity":1,"message":"221","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"201","severity":1,"message":"222","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":22},{"ruleId":"201","severity":1,"message":"223","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":24},{"ruleId":"208","severity":1,"message":"209","line":235,"column":9,"nodeType":"210","endLine":241,"endColumn":11},{"ruleId":"201","severity":1,"message":"224","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},{"ruleId":"201","severity":1,"message":"225","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":15},{"ruleId":"201","severity":1,"message":"226","line":25,"column":7,"nodeType":"203","messageId":"204","endLine":25,"endColumn":23},{"ruleId":"227","severity":2,"message":"228","line":100,"column":6,"nodeType":"229","endLine":100,"endColumn":15},{"ruleId":"227","severity":2,"message":"230","line":101,"column":8,"nodeType":"229","endLine":101,"endColumn":16},{"ruleId":"227","severity":2,"message":"231","line":140,"column":8,"nodeType":"229","endLine":140,"endColumn":14},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["234"],"no-unused-vars","'ChatRooms' is defined but never used.","Identifier","unusedVar","'IoIosChatboxes' is defined but never used.","'moment' is defined but never used.","'FaRegSmileBeam' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FaRegSmile' is defined but never used.","'BookmarkHeartFill' is defined but never used.","'BookmarkHeart' is defined but never used.","'EmojiHeartEyesFill' is defined but never used.","React Hook useEffect has missing dependencies: 'addFavoriteListener', 'chatRoom', and 'user'. Either include them or remove the dependency array.",["235"],"'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'UserPanel' is defined but never used.","'Favorited' is defined but never used.","'DirectMessages' is defined but never used.","'FaRegSmileWink' is defined but never used.","'styles' is defined but never used.","'Popover' is defined but never used.","'CustomScrollbars' is assigned a value but never used.","react/jsx-no-undef","'Popzindex' is not defined.","JSXIdentifier","'PopupBox' is not defined.","'Button' is not defined.","no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},"Update the dependencies array to be: [dispatch, history]",{"range":"240","text":"241"},"Update the dependencies array to be: [addFavoriteListener, chatRoom, user]",{"range":"242","text":"243"},[1007,1009],"[dispatch, history]",[1873,1875],"[addFavoriteListener, chatRoom, user]"]